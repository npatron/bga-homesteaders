<?php
/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * homesteaderstb implementation : © Nick Patron <nick.theboot@gmail.com>
 * 
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * material.inc.php
 *
 * homesteaders game material description
 *
 * Here, you can describe the material of your game with PHP variables.
 *   
 * This file is loaded in your game logic class constructor, ie these variables
 * are available everywhere in your game logic code.
 *
 */

$this->resource = array(
  `silver` => array(
    'name'   => clienttranslate("Silver"),
    'db_int' => SILVER,
    'tt'     => clienttranslate("Silver: Used for paying workers and auctions"),
  ),
  `workers` => array(
    'name'   => clienttranslate("Worker"),
    'db_int' => WORKER,
    'tt'     => clienttranslate("Worker: Produces resources when assigned to building "),
  ),   
  `track` => array(
    'name'   => clienttranslate("Railroad Track"),
    'db_int' => TRACK,
    'tt'     => clienttranslate("Track: Produces 1 Silver each round"),
  ),
  `wood` => array(
    'name'   => clienttranslate("Wood"),
    'db_int' => WOOD,
    'tt'     => clienttranslate("Wood: Required to build some buildings"),
  ),
  `food` => array(
    'name'   => clienttranslate("Food"),
    'db_int' => FOOD,
    'tt'     => clienttranslate("Food: Required to build some buildings, or to hire new workers"),
  ),
  `steel` => array(
    'name'   => clienttranslate("Steel"),
    'db_int' => STEEL,
    'tt'     => clienttranslate("Steel: Required to build some buildings"),
  ),
  `gold` => array(
    'name'   => clienttranslate("Gold"),
    'db_int' => GOLD,
    'tt'     => clienttranslate("Gold: Required to build some buildings.  Also can be used to pay costs(as 5 silver). Worth 2VP at end of game"),
  ),
  `copper` => array(
    'name'   => clienttranslate("Copper"),
    'db_int' => COPPER,
    'tt'     => clienttranslate("Copper: Required to build some buildings.  Worth 2VP at end of game"),
  ),
  `cow` => array(
    'name'   => clienttranslate("Livestock"),
    'db_int' => COW,
    'tt'     => clienttranslate("Copper: Required to build some buildings.  Worth 2VP at end of game"),
  ),
  `loan` => array(
    'name'   => clienttranslate("Debt"),
    'db_int' => LOAN,
    'tt'     => clienttranslate("Debt: Costs 5 Silver (or 1 Gold) to pay off.  Worth negative VP at end of game"),
  ),
  `trade` => array(
    'name'   => clienttranslate("Trade Token"),
    'db_int' => TRADE,
    'tt'     => clienttranslate("Trade: Required for any trade. Also for hiring new workers"),
  ),
  `vp` => array(
    'name'   => clienttranslate("VP Token"),
    'db_int' => VP,
    'tt'     => clienttranslate("VP token: Worth 1VP at end of game"),
  ),
);

// DEFINE THE BUILDING STATIC VALUES.
$this->building = array(
  BLD_HOMESTEAD_YELLOW => array(
    'name' => clienttranslate("Yellow Homestead"),
    'tt'   => clienttranslate("Yellow Homestead(R): Produces 2 Silver each round. Can be worked to produce Wood, and/or a VP Token"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> 0,
    'cost' => "".NONE,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".SILVER.SILVER,
    'slot' => 2,
    's1'   => "".WOOD,
    's1_tt'=> clienttranslate("Produces a Wood"),
    's2'   => "".VP,
    's2_tt'=> clienttranslate("Produces a VP Token"),
    'amt'  => 0,
   ),
   BLD_HOMESTEAD_RED => array(
    'name' => clienttranslate("Red Homestead"),
    'tt'   => clienttranslate("Red Homestead(R): Produces 2 Silver each round. Can be worked to produce Wood, and/or a VP Token"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> 0,
    'cost' => "".NONE,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".SILVER.SILVER,
    'slot' => 2,
    's1'   => "".WOOD,
    's1_tt'=> clienttranslate("Produces a Wood"),
    's2'   => "".VP,
    's2_tt'=> clienttranslate("Produces a VP Token"),
    'amt'  => 0,
   ),
   BLD_HOMESTEAD_GREEN => array(
    'name' => clienttranslate("Green Homestead"),
    'tt'   => clienttranslate("Green Homestead(R): Produces 2 Silver each round. Can be worked to produce Wood, and/or a VP Token"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> 0,
    
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".SILVER.SILVER,
    'slot' => 2,
    's1'   => "".WOOD,
    's1_tt'=> clienttranslate("Produces a Wood"),
    's2'   => "".VP,
    's2_tt'=> clienttranslate("Produces a VP Token"),
    'amt'  => 0,
   ),
   BLD_HOMESTEAD_BLUE => array(
    'name' => clienttranslate("Blue Homestead"),
    'tt'   => clienttranslate("Blue Homestead(R): Produces 2 Silver each round. Can be worked to produce Wood, and/or a VP Token"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> 0,
    'cost' => "".NONE,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".SILVER.SILVER,
    'slot' => 2,
    's1'   => "".WOOD,
    's1_tt'=> clienttranslate("Produces a Wood"),
    's2'   => "".VP,
    's2_tt'=> clienttranslate("Produces a VP Token"),
    'amt'  => 0,
   ),
   BLD_GRAIN_MILL => array(
    'name' => clienttranslate("Grain Mill"),
    'tt'   => clienttranslate("Grain Mill(R): Produces 1 Food each round"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> STAGE_SETTLEMENT,
    'cost' => "".WOOD.STEEL,
    'vp'   => 2,
    'vp_b' => VP_B_NONE,
    'inc'  => "".FOOD,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_FARM => array(
    'name' => clienttranslate("Farm"),
    'tt'   => clienttranslate("Farm(R): Can produce Food, and/or a Trade Token and 2 Silver"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> STAGE_SETTLEMENT,
    'cost' => "".WOOD,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => NONE,
    'slot' => 2,
    's1'   => "".TRADE.SILVER.SILVER,
    's1_tt'=> clienttranslate("Produces a Trade Token and 2 Silver"),
    's2'   => "".FOOD,
    's2_tt'=> clienttranslate("Produces a Food"),
    'amt'  => 3,
   ),
   BLD_MARKET => array(
    'name' => clienttranslate("Market"),
    'tt'   => clienttranslate("Market(C): Produces a Trade Token each round and can produce 2-Silver"),
    'type' => TYPE_COMMERCIAL,
    'stage'=> STAGE_SETTLEMENT,
    'cost' => "".WOOD,
    'vp'   => 2,
    'vp_b' => VP_B_NONE,
    'inc'  => "".TRADE,
    'slot' => 1,
    's1'   => "".SILVER.SILVER,
    's1_tt'=> clienttranslate("Produces 2 Silver"),
    'amt'  => 3,
   ),
   BLD_FOUNDRY => array(
    'name' => clienttranslate("Foundry"),
    'tt'   => clienttranslate("Foundry(I): Can produce Steel"),
    'type' => TYPE_INDUSTRIAL,
    'stage'=> STAGE_SETTLEMENT,
    'cost' => "".NONE,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => NONE,
    'slot' => 1,
    's1'   => "".STEEL,
    's1_tt'=> clienttranslate("Produces a Steel"),
    'amt'  => 3,
   ),
   BLD_STEEL_MILL => array(
    'name' => clienttranslate("Steel Mill"),
    'tt'   => clienttranslate("Steel Mill(I): Produces 1 Steel each round"),
    'type' => TYPE_INDUSTRIAL,
    'stage'=> STAGE_SETTLEMENT,
    'cost' => "".WOOD.WOOD.GOLD,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".STEEL,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_BOARDING_HOUSE => array(
    'name' => clienttranslate("Boarding House"),
    'tt'   => clienttranslate("Boarding House(R): Produces 2 Silver each round. Pay off 1 Debt on Build. Worth 1-VP per Industrial at end of game"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".WOOD.WOOD,
    'vp'   => 0,
    'vp_b' => VP_B_INDUSTRIAL,
    'inc'  => "".SILVER.SILVER,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_RAILWORKERS_HOUSE => array(
    'name' => clienttranslate("Railworkers House"),
    'tt'   => clienttranslate("Railworkers House(R): Produces 1-Trade Token and 1-Silver each round. Worth 1-VP per Worker and Track at end of game"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".STEEL.STEEL,
    'vp'   => 0,
    'vp_b' => VP_B_WRK_TRK,
    'inc'  => "".TRADE.SILVER,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_RANCH => array(
    'name' => clienttranslate("Ranch"),
    'tt'   => clienttranslate("Ranch(R): Can produce Livestock"),
    'type' => TYPE_RESIDENTIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".WOOD.STEEL.FOOD,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".NONE,
    'slot' => 1,
    's1'   => "".COW,
    's1_tt'=> clienttranslate("Produces a ")."{cow}",
    'amt'  => 2,
   ),
   BLD_TRADING_POST => array(
    'name' => clienttranslate("Trading Post"),
    'tt'   => clienttranslate("Trading Post(C): Produces 2-Trade Tokens each round"),
    'type' => TYPE_COMMERCIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".GOLD,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".TRADE.TRADE,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_GENERAL_STORE => array(
    'name' => clienttranslate("General Store"),
    'tt'   => clienttranslate("General Store(C): Produces 1 Trade Token each round. Whenever you sell, get an additional Silver"),
    'type' => TYPE_COMMERCIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".STEEL,
    'vp'   => 2,
    'vp_b' => VP_B_NONE,
    'inc'  => "".TRADE,
    'slot' => 0,
    'amt'  => 2,
   ),
   BLD_GOLD_MINE => array(
    'name' => clienttranslate("Gold Mine"),
    'tt'   => clienttranslate("Gold Mine(I): Can produce Gold"),
    'type' => TYPE_INDUSTRIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".WOOD.STEEL,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".NONE,
    'slot' => 1,
    's1'   => "".GOLD,
    's1_tt'=> clienttranslate("Produces a Gold"),
    'amt'  => 2,
   ),
   BLD_COPPER_MINE => array(
    'name' => clienttranslate("Copper Mine"),
    'tt'   => clienttranslate("Copper Mine(I): Can produce Livestock"),
    'type' => TYPE_INDUSTRIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".WOOD.WOOD.STEEL,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".NONE,
    'slot' => 1,
    's1'   => "".COPPER,
    's1_tt'=> clienttranslate("Produces a Copper"),
    'amt'  => 2,
   ),
   BLD_RIVER_PORT => array(
    'name' => clienttranslate("River Port"),
    'tt'   => clienttranslate("River Port(I): Can produce Gold. You may pay for Copper or Livestock in bulding or auction costs using Gold instead"),
    'type' => TYPE_INDUSTRIAL,
    'stage'=> STAGE_SETTLEMENT_TOWN,
    'cost' => "".WOOD,
    'vp'   => 0,
    'vp_b' => VP_B_NONE,
    'inc'  => "".NONE,
    'slot' => 3,
    's3'   => "".GOLD,
    's3_tt'=> clienttranslate("When worked by 2 workers, Produces a Gold"),
    'amt'  => 2,
   ),
   BLD_CHURCH => array(
    'name' => clienttranslate("Church"),
    'tt'   => clienttranslate("Church(R): Produces 2-VP each round"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_RESIDENTIAL,
    'cost' => "".WOOD.STEEL.GOLD.COPPER,
    'vp'   => 10,
    'vp_b' => VP_B_NONE,
    'inc'  => "".VP2,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_WORKSHOP => array(
    'name' => clienttranslate("Workshop"),
    'tt'   => clienttranslate("Workshop(R): Produces VP each round"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_RESIDENTIAL,
    'cost' => "".STEEL,
    'vp'   => 2,
    'vp_b' => VP_B_NONE,
    'inc'  => "".VP,
    'slot' => 0,
    'amt'  => 2,
   ),
   BLD_DEPOT => array(
    'name' => clienttranslate("Depot"),
    'tt'   => clienttranslate("Depot(C): Produces 2 Silver each Round. When built, gain 1 Railroad Advancement (and Bonus). Worth 1-VP per Track at end of game"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_COMMERCIAL,
    'cost' => "".WOOD.STEEL,
    'vp'   => 0,
    'vp_b' => VP_B_TRACK,
    'inc'  => "".SILVER.SILVER,
    'slot' => 0,
    'amt'  => 2,
   ),
   BLD_BANK => array(
    'name' => clienttranslate("Bank"),
    'tt'   => clienttranslate("Bank(C): Pays off 1 Debt each Round. Allows trading Trade for Silver. Worth 1-VP per Special at end of game"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_COMMERCIAL,
    'cost' => "".STEEL.COPPER,
    'vp'   => 3,
    'vp_b' => VP_B_SPECIAL,
    'inc'  => LOAN,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_STABLES => array(
    'name' => clienttranslate("Stables"),
    'tt'   => clienttranslate("Stables(C): Produces 1-VP and 1-Trade Token each round. Worth 1-VP per Residential at end of game"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_COMMERCIAL,
    'cost' => "".COW,
    'vp'   => 0,
    'vp_b' => VP_B_RESIDENTIAL,
    'inc'  => "".TRADE.VP,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_MEATPACKING_PLANT => array(
    'name' => clienttranslate("Meatpacking Plant"),
    'tt'   => clienttranslate("Meatpacking Plant(I): Can produce 2-VP with up to 2 workers each round."),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_INDUSTRIAL,
    'cost' => "".WOOD.COW,
    'vp'   => 2,
    'vp_b' => VP_B_NONE,
    'inc'  => "".NONE,
    'slot' => 2,
    's1'   => "".VP2,
    's1_tt'=> clienttranslate("Produces 2-VP"),
    's2'   => "".VP2,
    's2_tt'=> clienttranslate("Produces 2-VP"),
    'amt'  => 1,
   ),
   BLD_FORGE => array(
    'name' => clienttranslate("Forge"),
    'tt'   => clienttranslate("Forge(I): Can produce 2-VP each round. When built, gain a Railroad Advancement (and Bonus). When any other bulding is built, gain 1-VP"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_INDUSTRIAL,
    'cost' => "".STEEL.STEEL,
    'vp'   => 1,
    'vp_b' => VP_B_NONE,
    'inc'  =>  "".NONE,
    'slot' => 1,
    's1'   => "".VP2,
    's1_tt'=> clienttranslate("Produces 2-VP"),
    'amt'  => 2,
   ),
   BLD_FACTORY => array(
    'name' => clienttranslate("Factory"),
    'tt'   => clienttranslate("Factory(S): Produces 2-VP each round. Worth 1-VP per Industrial at end of game"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_SPECIAL,
    'cost' => "".STEEL.STEEL.COPPER,
    'vp'   => 6,
    'vp_b' => VP_B_INDUSTRIAL,
    'inc'  => VP2,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_RODEO => array(
    'name' => clienttranslate("Rodeo"),
    'tt'   => clienttranslate("Rodeo(S): Produces 1-Silver per worker (max 5) each round. "),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_SPECIAL,
    'cost' => "".FOOD.COW,
    'vp'   => 4,
    'vp_b' => VP_B_NONE,
    'inc'  => WORKER,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_LAWYER => array(
    'name' => clienttranslate("Lawyer"),
    'tt'   => clienttranslate("Lawyer(S): Produces 2VP each round. Can outbid others with the same Bid amount. Worth 1-VP per Commercial at end of game"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_SPECIAL,
    'cost' => "".WOOD.GOLD.COW,
    'vp'   => 4,
    'vp_b' => VP_B_COMMERCIAL,
    'inc'  => VP2,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_FAIRGROUNDS => array(
    'name' => clienttranslate("Fairgrounds"),
    'tt'   => clienttranslate("Fairgrounds(S): Produces a Gold each round. Worth 1-VP for each Residential at end of game"),
    'stage'=> STAGE_TOWN,
    'type' => TYPE_SPECIAL,
    'cost' => "".WOOD.WOOD.COPPER.COW,
    'vp'   => 6,
    'vp_b' => VP_B_RESIDENTIAL,
    'inc'  => GOLD,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_DUDE_RANCH => array(
    'name' => clienttranslate("Dude Ranch"),
    'tt'   => clienttranslate("Dude Ranch(R): Worth 1-VP for each Worker at end of game"),
    'stage'=> STAGE_CITY,
    'type' => TYPE_RESIDENTIAL,
    'cost' => "".WOOD.FOOD,
    'vp'   => 3,
    'vp_b' => VP_B_WORKER,
    'inc'  => "".NONE,
    'slot' => 0,
    'amt'  => 2,
   ),
   BLD_TOWN_HALL => array(
    'name' => clienttranslate("Town Hall"),
    'tt'   => clienttranslate("Town Hall(R): Worth 1-VP for each Commercial at end of game"),
    'stage'=> STAGE_CITY,
    'type' => TYPE_RESIDENTIAL,
    'cost' => "".WOOD.WOOD.COPPER,
    'vp'   => 10,
    'vp_b' => VP_B_COMMERCIAL,
    'inc'  => "".NONE,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_TERMINAL => array(
    'name' => clienttranslate("Terminal"),
    'tt'   => clienttranslate("Terminal(C): Worth 1-VP for each Track at end of game"),
    'stage'=> STAGE_CITY,
    'type' => TYPE_COMMERCIAL,
    'cost' => "".STEEL.STEEL,
    'vp'   => 6,
    'vp_b' => VP_B_TRACK,
    'inc'  => "".NONE,
    'slot' => 0,
    'amt'  => 2,
   ),
   BLD_RESTARAUNT => array(
    'name' => clienttranslate("Restaraunt"),
    'tt'   => clienttranslate("Restaraunt(R): Worth 1-VP for each Special at end of game"),
    'stage'=> STAGE_CITY,
    'type' => TYPE_COMMERCIAL,
    'cost' => "".WOOD.COW,
    'vp'   => 8,
    'vp_b' => VP_B_SPECIAL,
    'inc'  => "".NONE,
    'slot' => 0,
    'amt'  => 2,
   ),
   BLD_TRAIN_STATION => array(
    'name' => clienttranslate("Train Station"),
    'tt'   => clienttranslate("Train Station(I): When Built, you gain 1 Track and may Build Any other building"),
    'stage'=> STAGE_CITY,
    'type' => TYPE_INDUSTRIAL,
    'cost' => "".WOOD.COPPER,
    'vp'   => 3,
    'vp_b' => VP_B_NONE,
    'inc'  => "".NONE,
    'slot' => 0,
    'amt'  => 2,
   ),
   BLD_CIRCUS => array(
    'name' => clienttranslate("Circus"),
    'tt'   => clienttranslate("Circus(R): Worth 1-VP for each worker at end of game"),
    'stage'=> STAGE_CITY,
    'type' => TYPE_SPECIAL,
    'cost' => "".FOOD.FOOD.COW,
    'vp'   => 8,
    'vp_b' => VP_B_WORKER,
    'inc'  => "".NONE,
    'slot' => 0,
    'amt'  => 1,
   ),
   BLD_RAIL_YARD => array(
    'name' => clienttranslate("Church"),
    'tt'   => clienttranslate("Church(R): Worth 1-VP for each Building at game end"),
    'stage'=> STAGE_CITY,
    'type' => TYPE_SPECIAL,
    'cost' => "".STEEL.STEEL.GOLD.COPPER,
    'vp'   => 6,
    'vp_b' => VP_B_BUILDING,
    'inc'  => "".NONE,
    'slot' => 0,
    'amt'  => 1,
   ),
);

$this->workerSlots = array(
 '23_1' => array(
  'name' => clienttranslate("Meatpacking Plant slot 1"),
  'tt' => clienttranslate("Meatpacking Plant: produce 2 VPs."),
  'rules'=>"1,0,VV",
 ),
 '23_2' => array(
  'name' => clienttranslate("Meatpacking Plant slot 2"),
  'tt' => clienttranslate("Meatpacking Plant: produce 2 VPs."),
  'rules'=>"1,0,VV",
 ),
 '24_1' => array(
  'name' => clienttranslate("Forge"),
  'tt' => clienttranslate("Forge: produce 2 VPs."),
  'rules'=>"1,0,VV",
 ),
 );




